// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ SVG —ç–º–æ–¥–∂–∏
import { getInlineEmojiUrl, isInlineSvgEmoji } from './inlineSvgEmojis.js';

// –Ø–≤–Ω—ã–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —ç–º–æ–¥–∑–∏ ‚Üí –∏–º—è —Ñ–∞–π–ª–∞ (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
// –ö–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ, –∫–æ–¥–ø–æ–∏–Ω—Ç—ã —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å
const EMOJI_OVERRIDES = new Map([
  ['1f600', '1f603'] // üòÄ ‚Üí 1f603 (–∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
]);

/** –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–∞–∑–æ–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è) –¥–ª—è —ç–º–æ–¥–∑–∏ —Å —É—á—ë—Ç–æ–º overrides */
export function emojiFilenameBase(emoji) {
    if (!emoji || typeof emoji !== 'string') return null;
    const cleaned = Array.from(emoji)
        .filter(ch => ch.codePointAt(0) !== 0xFE0F)
        .join('');
    if (!cleaned) return null;
    const cps = [];
    for (const ch of cleaned) {
        const cp = ch.codePointAt(0);
        if (typeof cp === 'number') cps.push(cp.toString(16).toLowerCase());
    }
    if (cps.length === 0) return null;
    const base = cps.join('-');
    return EMOJI_OVERRIDES.get(base) || base;
}
/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É-—ç–º–æ–¥–∑–∏ –≤ URL SVG –∏–∫–æ–Ω–∫–∏ Twemoji (—á–µ—Ä–µ–∑ jsDelivr CDN)
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç null, –µ—Å–ª–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å
 *
 * –ü—Ä–∏–º–µ—Ä URL: https://cdn.jsdelivr.net/npm/twemoji@14.0.2/assets/svg/1f600.svg
 */
export function emojiToTwemojiUrl(emoji) {
    try {
        if (!emoji || typeof emoji !== 'string') return null;
        // –£–±–∏—Ä–∞–µ–º VARIATION SELECTOR-16 (U+FE0F) –∏ –Ω–µ–≤–∏–¥–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
        const cleaned = Array.from(emoji)
            .filter(ch => ch.codePointAt(0) !== 0xFE0F)
            .join('');
        if (!cleaned) return null;

        // –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ —é–Ω–∏–∫–æ–¥-–≥—Ä–∞—Ñ–µ–º–∞–º –∏ –ø–æ–ª—É—á–∞–µ–º –∫–æ–¥–ø–æ–∏–Ω—Ç—ã
        const codePoints = [];
        for (const ch of cleaned) {
            const cp = ch.codePointAt(0);
            if (typeof cp === 'number') {
                codePoints.push(cp.toString(16).toLowerCase());
            }
        }
        if (codePoints.length === 0) return null;

        const filename = codePoints.join('-');
        return `https://cdn.jsdelivr.net/npm/twemoji@14.0.2/assets/svg/${filename}.svg`;
    } catch (e) {
        return null;
    }
}

/**
 * –°–æ–±–∏—Ä–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ SVG –≤ public/emoji –ø–æ –∫–æ–¥–ø–æ–∏–Ω—Ç–∞–º —ç–º–æ–¥–∑–∏
 * –ü—Ä–∏–º–µ—Ä: /emoji/1f600.svg
 */
export function emojiToLocalUrl(emoji) {
    try {
        const base = emojiFilenameBase(emoji);
        if (!base) return null;
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –ø–∞–ø–∫—É /emodji –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ
        return `/emodji/${base}.svg`;
    } catch (e) {
        return null;
    }
}

// –ö–∞—Ä—Ç–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (SVG –∏ PNG) –∏–∑ src/assets/emodji
// –í —Ä–µ–∂–∏–º–µ —Å bundler –∏—Å–ø–æ–ª—å–∑—É–µ–º import.meta.glob, –∏–Ω–∞—á–µ fallback
const _localEmojiModules = (() => {
  if (typeof import.meta !== 'undefined' && import.meta.glob) {
    try {
      return import.meta.glob('../assets/emodji/**/*.{svg,SVG,png,PNG}', { eager: true, query: '?url', import: 'default' });
    } catch (error) {
      return {};
    }
  }
  return {};
})();

// –ò–Ω–¥–µ–∫—Å –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ (–±–µ–∑ –ø—É—Ç–∏)
const _localEmojiIndex = (() => {
  const map = new Map();
  for (const p in _localEmojiModules) {
    const parts = p.split('/');
    const fname = parts[parts.length - 1]; // e.g. 1f600.svg
    map.set(fname.toLowerCase(), _localEmojiModules[p]);
  }
  return map;
})();

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—ã–π URL –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π SVG –∏–∑ src/assets/emodji –ø–æ —ç–º–æ–¥–∑–∏
 * –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç –≤ –±–∞–Ω–¥–ª–µ ‚Äî –≤–µ—Ä–Ω–µ—Ç null
 */
export function emojiToAppLocalUrl(emoji) {
    try {
        const base = emojiFilenameBase(emoji);
        if (!base) return null;
        // –°–Ω–∞—á–∞–ª–∞ svg, –∑–∞—Ç–µ–º png
        return _localEmojiIndex.get(base + '.svg') || _localEmojiIndex.get(base + '.png') || null;
    } catch (_) {
        return null;
    }
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–±–æ—Ä –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π (public) –¥–ª—è —ç–º–æ–¥–∑–∏: svg –∏ png, /emodji –∏ /emoji
 */
export function buildLocalPaths(emoji) {
    try {
        const base = emojiFilenameBase(emoji);
        if (!base) return [];
        return [
            `/emodji/${base}.svg`,
            `/emodji/${base}.png`,
            `/emoji/${base}.svg`,
            `/emoji/${base}.png`
        ];
    } catch (_) {
        return [];
    }
}

/**
 * –ü–†–ò–û–†–ò–¢–ï–¢–ù–´–ô –†–ï–ó–û–õ–í–ï–†: –°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ SVG, –ø–æ—Ç–æ–º —Ñ–∞–π–ª—ã
 * @param {string} emoji - —ç–º–æ–¥–∂–∏ —Å–∏–º–≤–æ–ª  
 * @returns {string|null} Data URL –¥–ª—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ SVG –∏–ª–∏ null
 */
export function resolveInlineEmojiFirst(emoji) {
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ SVG —ç–º–æ–¥–∂–∏ (–º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞, –Ω–µ—Ç –ø—Ä–æ–±–ª–µ–º —Å –ø—É—Ç—è–º–∏)
    if (isInlineSvgEmoji(emoji)) {
        const dataUrl = getInlineEmojiUrl(emoji);
        if (dataUrl) {
            console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π SVG —ç–º–æ–¥–∂–∏:', emoji);
            return dataUrl;
        }
    }
    
    return null; // –≠–º–æ–¥–∂–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω—ã–π URL –¥–ª—è —ç–º–æ–¥–∂–∏ —Å —É—á–µ—Ç–æ–º –±–∞–∑–æ–≤–æ–≥–æ –ø—É—Ç–∏
 * @param {string} emoji - —ç–º–æ–¥–∂–∏ —Å–∏–º–≤–æ–ª
 * @param {string} basePath - –±–∞–∑–æ–≤—ã–π –ø—É—Ç—å –∫ –∞—Å—Å–µ—Ç–∞–º
 * @returns {string|null} –∞–±—Å–æ–ª—é—Ç–Ω—ã–π URL –∏–ª–∏ null
 */
export function resolveEmojiAbsoluteUrl(emoji, basePath = null) {
    // –ü–†–ò–û–†–ò–¢–ï–¢ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ SVG —ç–º–æ–¥–∂–∏
    const inlineUrl = resolveInlineEmojiFirst(emoji);
    if (inlineUrl) return inlineUrl;
    try {
        const base = emojiFilenameBase(emoji);
        if (!base) return null;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–π –ø—É—Ç—å
        let resolvedBasePath = basePath;
        
        if (!resolvedBasePath) {
            // –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ—Ç import.meta.url
            try {
                resolvedBasePath = new URL('../assets/emodji/', import.meta.url).href;
            } catch (error) {
                // Fallback –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É
                if (window.MOODBOARD_BASE_PATH) {
                    const globalPath = window.MOODBOARD_BASE_PATH.endsWith('/') ? window.MOODBOARD_BASE_PATH : window.MOODBOARD_BASE_PATH + '/';
                    resolvedBasePath = `${globalPath}src/assets/emodji/`;
                } else {
                    // –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï: –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–∫–µ—Ç—É
                    const currentUrl = window.location.origin;
                    
                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –ø–∞–∫–µ—Ç–∞ –∏–∑ package.json –∏–ª–∏ –ø–æ —Å–∫—Ä–∏–ø—Ç—É
                    let packagePath = null;
                    
                    // –ú–µ—Ç–æ–¥ 1: –ò—â–µ–º –≤ node_modules –ø–æ –∏–∑–≤–µ—Å—Ç–Ω—ã–º –∏–º–µ–Ω–∞–º –ø–∞–∫–µ—Ç–æ–≤
                    const possiblePackageNames = [
                        '@sequent-org/moodboard',
                        'moodboard-futurello', 
                        'moodboard'
                    ];
                    
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–∞–∫–µ—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                    packagePath = `${currentUrl}/node_modules/@sequent-org/moodboard/src/assets/emodji/`;
                    
                    // Fallback –Ω–∞ –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏–º–µ–Ω–∞ –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
                    // (–¥–ª—è —Ñ–æ—Ä–∫–æ–≤ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –≤–µ—Ä—Å–∏–π –ø–∞–∫–µ—Ç–∞)
                    // const alternativeNames = ['moodboard-futurello', 'moodboard'];
                    // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
                    
                    resolvedBasePath = packagePath || `${currentUrl}/src/assets/emodji/`;
                    
                    console.log('üîß Fallback –ø—É—Ç—å –∫ —ç–º–æ–¥–∂–∏:', resolvedBasePath);
                }
            }
        }
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º URL (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç PNG, –ø–æ—Ç–æ–º SVG)
        if (!resolvedBasePath.endsWith('/')) resolvedBasePath += '/';
        
        // –ü–†–ò–û–†–ò–¢–ï–¢ 2: –§–∞–π–ª—ã –≤ –ø–∞–ø–∫–∞—Ö (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö SVG)
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –ø–∞–ø–∫–∏
        const possiblePaths = [
            `${resolvedBasePath}–°–º–∞–π–ª–∏–∫–∏/${base}.png`,
            `${resolvedBasePath}–ñ–µ—Å—Ç—ã/${base}.png`, 
            `${resolvedBasePath}–ñ–µ–Ω—Å–∫–∏–µ —ç–º–æ—Ü–∏–∏/${base}.png`,
            `${resolvedBasePath}–ö–æ—Ç–∏–∫–∏/${base}.png`,
            `${resolvedBasePath}–†–∞–∑–Ω–æ–µ/${base}.png`,
            `${resolvedBasePath}–û–±–µ–∑—å—è–Ω–∫–∞/${base}.png`,
            `${resolvedBasePath}${base}.png` // –ü—Ä—è–º–æ –≤ –∫–æ—Ä–Ω–µ –ø–∞–ø–∫–∏ —ç–º–æ–¥–∂–∏
        ];
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–∑–º–æ–∂–Ω—ã–π –ø—É—Ç—å (–±—Ä–∞—É–∑–µ—Ä —Å–∞–º –ø—Ä–æ–≤–µ—Ä–∏—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å)
        return possiblePaths[0];
        
    } catch (error) {
        return null;
    }
}

