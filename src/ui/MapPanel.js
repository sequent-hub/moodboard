export class MapPanel {
    constructor(container, eventBus) {
        this.container = container;
        this.eventBus = eventBus;
        this.element = null;
        this.popupEl = null;
        this.create();
        this.attach();
    }

    create() {
        this.element = document.createElement('div');
        this.element.className = 'moodboard-mapbar';

        const btn = document.createElement('button');
        btn.className = 'moodboard-mapbar__button';
        btn.title = '–ö–∞—Ä—Ç–∞';
        btn.textContent = 'üó∫Ô∏è';
        btn.dataset.action = 'toggle-map';

        this.element.appendChild(btn);
        this.container.appendChild(this.element);
    }

    attach() {
        // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ ‚Äî –æ—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â—É—é –ø–∞–Ω–µ–ª—å
        this.element.addEventListener('click', (e) => {
            const btn = e.target.closest('.moodboard-mapbar__button');
            if (!btn) return;
            e.stopPropagation();
            if (this.popupEl) this.hidePopup();
            else this.showPopup();
            this.eventBus.emit('ui:map:toggle');
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –ø–∞–Ω–µ–ª–∏
        document.addEventListener('mousedown', (e) => {
            if (!this.popupEl) return;
            if (this.element.contains(e.target)) return;
            this.hidePopup();
        });
    }

    destroy() {
        if (this.element) this.element.remove();
        this.element = null;
    }

    // –ü–æ–∫–∞–∑ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–π –ø–∞–Ω–µ–ª–∏ (20% —à–∏—Ä–∏–Ω—ã/–≤—ã—Å–æ—Ç—ã —ç–∫—Ä–∞–Ω–∞, –Ω–∞–¥ –∫–Ω–æ–ø–∫–æ–π)
    showPopup() {
        if (this.popupEl) return;
        const popup = document.createElement('div');
        popup.className = 'moodboard-mapbar__popup';
        // –ó–¥–µ—Å—å –≤ –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å –º–∏–Ω–∏‚Äë–∫–∞—Ä—Ç—É
        this.element.appendChild(popup);
        this.popupEl = popup;
    }

    // –°–∫—Ä—ã—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â—É—é –ø–∞–Ω–µ–ª—å
    hidePopup() {
        if (!this.popupEl) return;
        this.popupEl.remove();
        this.popupEl = null;
    }
}


