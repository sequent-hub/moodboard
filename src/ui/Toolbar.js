/**
 * –ü–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è MoodBoard
 */
export class Toolbar {
    constructor(container, eventBus, theme = 'light') {
        this.container = container;
        this.eventBus = eventBus;
        this.theme = theme;
        this.element = null;
        
        this.createToolbar();
        this.attachEvents();
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç—É–ª–±–∞—Ä–∞
     */
    createToolbar() {
        this.element = document.createElement('div');
        this.element.className = `moodboard-toolbar moodboard-toolbar--${this.theme}`;
        
        const tools = [
            { id: 'frame', label: 'üñºÔ∏è Add Frame', type: 'frame' },
            { id: 'text', label: 'üìù Add Text', type: 'simple-text' },
            { id: 'shape', label: 'üî∂ Add Shape', type: 'shape' },
            { id: 'divider', type: 'divider' },
            { id: 'clear', label: 'üóëÔ∏è Clear All', type: 'clear' },
            { id: 'export', label: 'üíæ Export', type: 'export' }
        ];
        
        tools.forEach(tool => {
            if (tool.type === 'divider') {
                const divider = document.createElement('div');
                divider.className = 'moodboard-toolbar__divider';
                this.element.appendChild(divider);
            } else {
                const button = this.createButton(tool);
                this.element.appendChild(button);
            }
        });
        
        this.container.appendChild(this.element);
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
     */
    createButton(tool) {
        const button = document.createElement('button');
        button.className = `moodboard-toolbar__button moodboard-toolbar__button--${tool.id}`;
        button.textContent = tool.label;
        button.dataset.tool = tool.type;
        button.dataset.toolId = tool.id;
        
        return button;
    }
    
    /**
     * –ü–æ–¥–∫–ª—é—á–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
     */
    attachEvents() {
        this.element.addEventListener('click', (e) => {
            const button = e.target.closest('.moodboard-toolbar__button');
            if (!button) return;
            
            const toolType = button.dataset.tool;
            const toolId = button.dataset.toolId;
            
            // –≠–º–∏—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è MoodBoardWorkspace
            this.eventBus.emit('toolbar:action', {
                type: toolType,
                id: toolId,
                position: this.getRandomPosition()
            });
            
            // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            this.animateButton(button);
        });
    }
    
    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
     */
    getRandomPosition() {
        return {
            x: Math.random() * 300 + 50,
            y: Math.random() * 200 + 50
        };
    }
    
    /**
     * –ê–Ω–∏–º–∞—Ü–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
     */
    animateButton(button) {
        button.style.transform = 'scale(0.95)';
        setTimeout(() => {
            button.style.transform = 'scale(1)';
        }, 100);
    }
    
    /**
     * –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
     */
    setTheme(theme) {
        this.theme = theme;
        this.element.className = `moodboard-toolbar moodboard-toolbar--${theme}`;
    }
    
    /**
     * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    destroy() {
        if (this.element) {
            this.element.remove();
            this.element = null;
        }
    }
}
