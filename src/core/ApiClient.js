// src/core/ApiClient.js
export class ApiClient {
    constructor(baseUrl, authToken = null) {
        this.baseUrl = baseUrl;
        this.authToken = authToken;
    }

    async getBoard(boardId) {
        try {
            const response = await fetch(`/api/moodboard/${boardId}`, {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                credentials: 'same-origin'
            });

            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }

            const result = await response.json();
            
            if (result.success) {
                return { data: result.data };
            } else {
                throw new Error(result.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å–∫–∏');
            }
        } catch (error) {
            console.warn('API: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É:', error);
            // Fallback –∫ –∑–∞–≥–ª—É—à–∫–µ
            return {
                data: {
                    id: boardId,
                    name: 'Demo Board',
                    objects: []
                }
            };
        }
    }

    async saveBoard(boardId, boardData) {
        try {
            // –§–∏–ª—å—Ç—Ä—É–µ–º –æ–±—ä–µ–∫—Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ —Ñ–∞–π–ª–æ–≤ - —É–±–∏—Ä–∞–µ–º –∏–∑–±—ã—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            const cleanedData = this._cleanObjectData(boardData);

            const csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');

            const response = await fetch('/api/moodboard/save', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                    'X-CSRF-TOKEN': csrfToken,
                    'X-Requested-With': 'XMLHttpRequest'
                },
                credentials: 'same-origin',
                body: JSON.stringify({
                    boardId: boardId,
                    boardData: cleanedData
                })
            });

            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            
            const result = await response.json();
            
            if (result.success) {
                return { success: true, data: result };
            } else {
                throw new Error(result.message || '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–æ—Å–∫–∏');
            }
        } catch (error) {
            console.error('ApiClient: –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–æ—Å–∫–∏:', error);
            throw error;
        }
    }

    /**
     * –û—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç–æ–≤ –æ—Ç –∏–∑–±—ã—Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
     * @private
     */
    _cleanObjectData(boardData) {
        if (!boardData || !boardData.objects) {
            return boardData;
        }

        const cleanedObjects = boardData.objects.map(obj => {
            if (obj.type === 'image') {
                console.log('üßπ DEBUG _cleanImageData: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', {
                    id: obj.id,
                    imageId: obj.imageId,
                    hasSrc: !!obj.src,
                    hasPropertiesSrc: !!obj.properties?.src,
                    srcIsBase64: !!(obj.src && obj.src.startsWith('data:')),
                    propertiesSrcIsBase64: !!(obj.properties?.src && obj.properties.src.startsWith('data:'))
                });
                
                const cleanedObj = { ...obj };
                
                // –ï—Å–ª–∏ –µ—Å—Ç—å imageId, —É–±–∏—Ä–∞–µ–º src –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞
                if (obj.imageId && typeof obj.imageId === 'string' && obj.imageId.trim().length > 0) {
                    console.log('üßπ DEBUG _cleanImageData: —É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –µ—Å—Ç—å imageId, —É–±–∏—Ä–∞–µ–º src');
                    
                    // –£–±–∏—Ä–∞–µ–º src —Å –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è
                    if (cleanedObj.src) {
                        delete cleanedObj.src;
                        console.log('üßπ DEBUG: —É–¥–∞–ª–µ–Ω src —Å –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è');
                    }
                    
                    // –£–±–∏—Ä–∞–µ–º src –∏–∑ properties
                    if (cleanedObj.properties?.src) {
                        cleanedObj.properties = { ...cleanedObj.properties };
                        delete cleanedObj.properties.src;
                        console.log('üßπ DEBUG: —É–¥–∞–ª–µ–Ω src –∏–∑ properties');
                    }
                }
                // –ï—Å–ª–∏ –Ω–µ—Ç imageId, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –æ base64
                else {
                    console.log('üßπ DEBUG _cleanImageData: —É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ù–ï–¢ imageId, –æ—Å—Ç–∞–≤–ª—è–µ–º src –∫–∞–∫ –µ—Å—Ç—å');
                    if (cleanedObj.properties?.src && cleanedObj.properties.src.startsWith('data:')) {
                        console.warn('‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Å base64 –≤ properties, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç imageId:', cleanedObj.id);
                    }
                    if (cleanedObj.src && cleanedObj.src.startsWith('data:')) {
                        console.warn('‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Å base64 –≤ src, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç imageId:', cleanedObj.id);
                    }
                    if (!obj.imageId) {
                        console.warn('‚ùå –£ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç imageId:', cleanedObj.id);
                    }
                }
                
                return cleanedObj;
            }
            
            if (obj.type === 'file') {
                console.log('üßπ DEBUG _cleanObjectData: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª:', {
                    id: obj.id,
                    fileId: obj.fileId,
                    hasContent: !!obj.content,
                    hasPropertiesContent: !!obj.properties?.content
                });
                
                const cleanedObj = { ...obj };
                
                // –ï—Å–ª–∏ –µ—Å—Ç—å fileId, —É–±–∏—Ä–∞–µ–º content –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞
                if (obj.fileId && typeof obj.fileId === 'string' && obj.fileId.trim().length > 0) {
                    console.log('üßπ DEBUG _cleanObjectData: —É —Ñ–∞–π–ª–∞ –µ—Å—Ç—å fileId, —É–±–∏—Ä–∞–µ–º content');
                    
                    // –£–±–∏—Ä–∞–µ–º content —Å –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è
                    if (cleanedObj.content) {
                        delete cleanedObj.content;
                        console.log('üßπ DEBUG: —É–¥–∞–ª–µ–Ω content —Å –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è');
                    }
                    
                    // –£–±–∏—Ä–∞–µ–º content –∏–∑ properties
                    if (cleanedObj.properties?.content) {
                        cleanedObj.properties = { ...cleanedObj.properties };
                        delete cleanedObj.properties.content;
                        console.log('üßπ DEBUG: —É–¥–∞–ª–µ–Ω content –∏–∑ properties');
                    }
                }
                // –ï—Å–ª–∏ –Ω–µ—Ç fileId, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –æ –Ω–∞–ª–∏—á–∏–∏ content
                else {
                    console.log('üßπ DEBUG _cleanObjectData: —É —Ñ–∞–π–ª–∞ –ù–ï–¢ fileId, –æ—Å—Ç–∞–≤–ª—è–µ–º content –∫–∞–∫ –µ—Å—Ç—å');
                    if (cleanedObj.properties?.content) {
                        console.warn('‚ùå –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Å content –≤ properties, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç fileId:', cleanedObj.id);
                    }
                    if (cleanedObj.content) {
                        console.warn('‚ùå –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Å content, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç fileId:', cleanedObj.id);
                    }
                    if (!obj.fileId) {
                        console.warn('‚ùå –£ —Ñ–∞–π–ª–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç fileId:', cleanedObj.id);
                    }
                }
                
                return cleanedObj;
            }
            
            return obj;
        });

        return {
            ...boardData,
            objects: cleanedObjects
        };
    }

    /**
     * –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
     */
    async restoreObjectUrls(boardData) {
        if (!boardData || !boardData.objects) {
            return boardData;
        }

        const restoredObjects = await Promise.all(
            boardData.objects.map(async (obj) => {
                if (obj.type === 'image') {
                    console.log('üîó DEBUG restoreImageUrls: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', {
                        id: obj.id,
                        imageId: obj.imageId,
                        hasSrc: !!obj.src,
                        hasPropertiesSrc: !!obj.properties?.src
                    });
                    
                    if (obj.imageId && (!obj.src && !obj.properties?.src)) {
                        console.log('üîó DEBUG: –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º URL –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
                        try {
                            // –§–æ—Ä–º–∏—Ä—É–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                            const imageUrl = `/api/images/${obj.imageId}/file`;
                            
                            return {
                                ...obj,
                                src: imageUrl,
                                properties: {
                                    ...obj.properties,
                                    src: imageUrl
                                }
                            };
                        } catch (error) {
                            console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å URL –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${obj.imageId}:`, error);
                            return obj;
                        }
                    } else {
                        console.log('üîó DEBUG: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ –∏–º–µ–µ—Ç URL –∏–ª–∏ –Ω–µ—Ç imageId, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å');
                        return obj;
                    }
                }
                
                if (obj.type === 'file') {
                    console.log('üîó DEBUG restoreObjectUrls: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª:', {
                        id: obj.id,
                        fileId: obj.fileId,
                        hasUrl: !!obj.url,
                        hasPropertiesUrl: !!obj.properties?.url
                    });
                    
                    if (obj.fileId) {
                        console.log('üîó DEBUG: –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–∞–π–ª–∞');
                        try {
                            // –§–æ—Ä–º–∏—Ä—É–µ–º URL —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                            const fileUrl = `/api/files/${obj.fileId}/download`;
                            
                            // –°–æ–∑–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                            const restoredObj = {
                                ...obj,
                                url: fileUrl,
                                properties: {
                                    ...obj.properties,
                                    url: fileUrl
                                }
                            };
                            
                            // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
                            // (–≠—Ç–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É)
                            setTimeout(async () => {
                                try {
                                    const response = await fetch(`/api/files/${obj.fileId}`, {
                                        headers: {
                                            'Accept': 'application/json',
                                            'X-Requested-With': 'XMLHttpRequest'
                                        },
                                        credentials: 'same-origin'
                                    });
                                    
                                    if (response.ok) {
                                        const result = await response.json();
                                        if (result.success && result.data) {
                                            console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞:', result.data);
                                            // –≠–º–∏—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
                                            // (—ç—Ç–æ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≤ core, –µ—Å–ª–∏ EventBus –¥–æ—Å—Ç—É–ø–µ–Ω)
                                            if (typeof window !== 'undefined' && window.moodboardEventBus) {
                                                window.moodboardEventBus.emit('file:metadata:updated', {
                                                    objectId: obj.id,
                                                    fileId: obj.fileId,
                                                    metadata: result.data
                                                });
                                            }
                                        }
                                    }
                                } catch (error) {
                                    console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ ${obj.fileId}:`, error);
                                }
                            }, 100);
                            
                            return restoredObj;
                        } catch (error) {
                            console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–∞–π–ª–∞ ${obj.fileId}:`, error);
                            return obj;
                        }
                    } else {
                        console.log('üîó DEBUG: —Ñ–∞–π–ª –Ω–µ –∏–º–µ–µ—Ç fileId, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å');
                        return obj;
                    }
                }
                
                return obj;
            })
        );

        return {
            ...boardData,
            objects: restoredObjects
        };
    }
}