import { BaseCommand } from './BaseCommand.js';
import { Events } from '../events/Events.js';

/**
 * –ö–æ–º–∞–Ω–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
 */
export class EditFileNameCommand extends BaseCommand {
    constructor(coreMoodboard, objectId, oldName, newName) {
        super('edit_file_name', `–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Ñ–∞–π–ª`);
        this.coreMoodboard = coreMoodboard;
        this.objectId = objectId;
        this.oldName = oldName;
        this.newName = newName;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
        this.description = `–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Ñ–∞–π–ª "${this.oldName}" ‚Üí "${this.newName}"`;
    }

    async execute() {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
        await this._setFileName(this.newName);
    }

    async undo() {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
        await this._setFileName(this.oldName);
    }

    /**
     * –ú–æ–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —Ñ–∞–π–ª–∞
     */
    canMergeWith(otherCommand) {
        return otherCommand instanceof EditFileNameCommand &&
               otherCommand.objectId === this.objectId;
    }

    /**
     * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è - –±–µ—Ä–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑ –ø–µ—Ä–≤–æ–π –∫–æ–º–∞–Ω–¥—ã
     * –∏ –∫–æ–Ω–µ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑ –≤—Ç–æ—Ä–æ–π
     */
    mergeWith(otherCommand) {
        if (!this.canMergeWith(otherCommand)) {
            throw new Error('Cannot merge commands');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω–µ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
        this.newName = otherCommand.newName;
        this.description = `–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Ñ–∞–π–ª "${this.oldName}" ‚Üí "${this.newName}"`;
        this.timestamp = otherCommand.timestamp;
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
     * @private
     */
    async _setFileName(fileName) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        const objects = this.coreMoodboard.state.getObjects();
        const objectData = objects.find(obj => obj.id === this.objectId);
        
        if (objectData) {
            // –û–±–Ω–æ–≤–ª—è–µ–º properties –æ–±—ä–µ–∫—Ç–∞
            if (!objectData.properties) {
                objectData.properties = {};
            }
            objectData.properties.fileName = fileName;
            
            // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å —Å–µ—Ä–≤–µ—Ä–æ–º, –µ—Å–ª–∏ –µ—Å—Ç—å fileId
            if (objectData.fileId && this.coreMoodboard.fileUploadService) {
                try {
                    console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º:', { fileId: objectData.fileId, fileName });
                    await this.coreMoodboard.fileUploadService.updateFileMetadata(objectData.fileId, { 
                        fileName: fileName 
                    });
                    console.log('‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
                } catch (error) {
                    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º:', error);
                    // –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –ª–æ–∫–∞–ª—å–Ω—ã–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
                }
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            this.coreMoodboard.state.markDirty();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
            const pixiReq = { objectId: this.objectId, pixiObject: null };
            this.coreMoodboard.eventBus.emit(Events.Tool.GetObjectPixi, pixiReq);
            
            if (pixiReq.pixiObject && pixiReq.pixiObject._mb && pixiReq.pixiObject._mb.instance) {
                const fileInstance = pixiReq.pixiObject._mb.instance;
                if (typeof fileInstance.setFileName === 'function') {
                    fileInstance.setFileName(fileName);
                }
            }
            
            // –≠–º–∏—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
            this.coreMoodboard.eventBus.emit(Events.Object.Updated, { 
                objectId: this.objectId,
                type: 'fileName',
                oldValue: this.oldName,
                newValue: fileName
            });
        } else {
            console.warn(`EditFileNameCommand: –æ–±—ä–µ–∫—Ç —Å ID ${this.objectId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }
    }
}
