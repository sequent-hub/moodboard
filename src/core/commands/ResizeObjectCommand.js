import { BaseCommand } from './BaseCommand.js';

/**
 * –ö–æ–º–∞–Ω–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–±—ä–µ–∫—Ç–∞
 */
export class ResizeObjectCommand extends BaseCommand {
    constructor(coreMoodboard, objectId, oldSize, newSize) {
        super('resize_object', `–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞`);
        this.coreMoodboard = coreMoodboard;
        this.objectId = objectId;
        this.oldSize = { ...oldSize };
        this.newSize = { ...newSize };
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏
        this.description = `–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ ${Math.round(this.oldSize.width)}√ó${Math.round(this.oldSize.height)} ‚Üí ${Math.round(this.newSize.width)}√ó${Math.round(this.newSize.height)}`;
    }

    execute() {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä
        this._setSize(this.newSize);
    }

    undo() {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä—ã–π —Ä–∞–∑–º–µ—Ä
        this._setSize(this.oldSize);
    }

    _setSize(size) {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        const objects = this.coreMoodboard.state.state.objects;
        const object = objects.find(obj => obj.id === this.objectId);
        const objectType = object ? object.type : null;
        
        console.log(`üîÑ ResizeObjectCommand._setSize: –æ–±—ä–µ–∫—Ç ${this.objectId}, —Ç–∏–ø ${objectType}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –≤ PIXI —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–∏–ø–∞
        this.coreMoodboard.pixi.updateObjectSize(this.objectId, size, objectType);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ (–±–µ–∑ —ç–º–∏—Ç–∞ —Å–æ–±—ã—Ç–∏—è, —á—Ç–æ–±—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É)
        if (object) {
            object.width = size.width;
            object.height = size.height;
            this.coreMoodboard.state.markDirty();
        }
    }

    /**
     * –ú–æ–∂–Ω–æ –ª–∏ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å —Å –¥—Ä—É–≥–æ–π –∫–æ–º–∞–Ω–¥–æ–π –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ç–æ–≥–æ –∂–µ –æ–±—ä–µ–∫—Ç–∞
     */
    canMergeWith(otherCommand) {
        return otherCommand instanceof ResizeObjectCommand && 
               otherCommand.objectId === this.objectId;
    }

    /**
     * –û–±—ä–µ–¥–∏–Ω–∏—Ç—å —Å –¥—Ä—É–≥–æ–π –∫–æ–º–∞–Ω–¥–æ–π –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
     */
    mergeWith(otherCommand) {
        if (!this.canMergeWith(otherCommand)) {
            throw new Error('Cannot merge with this command');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω–µ—á–Ω—ã–π —Ä–∞–∑–º–µ—Ä
        this.newSize = { ...otherCommand.newSize };
        this.description = `–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ ${Math.round(this.oldSize.width)}√ó${Math.round(this.oldSize.height)} ‚Üí ${Math.round(this.newSize.width)}√ó${Math.round(this.newSize.height)}`;
        this.timestamp = otherCommand.timestamp; // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    }
}
