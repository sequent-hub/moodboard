import { BaseCommand } from './BaseCommand.js';
import { Events } from '../events/Events.js';

/**
 * –ö–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
 */
export class DeleteObjectCommand extends BaseCommand {
    constructor(coreMoodboard, objectId) {
        super('delete_object', `–£–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç`);
        this.coreMoodboard = coreMoodboard;
        this.objectId = objectId;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        const objects = this.coreMoodboard.state.getObjects();
        const originalData = objects.find(obj => obj.id === objectId);
        
        if (!originalData) {
            throw new Error(`Object with id ${objectId} not found`);
        }

        // –î–µ–ª–∞–µ–º –≥–ª—É–±–æ–∫—É—é –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞
        this.objectData = JSON.parse(JSON.stringify(originalData));
        
        // –î–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –µ—Å—Ç—å src URL –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        if (this.objectData.type === 'image') {
            console.log('üîß DEBUG DeleteObjectCommand: –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', {
                id: this.objectData.id,
                imageId: this.objectData.imageId,
                src: this.objectData.src,
                propertiesSrc: this.objectData.properties?.src,
                hasBase64Src: !!(this.objectData.src && this.objectData.src.startsWith('data:')),
                hasBase64Props: !!(this.objectData.properties?.src && this.objectData.properties.src.startsWith('data:'))
            });
            
            if (this.objectData.imageId) {
                const imageUrl = `/api/images/${this.objectData.imageId}/file`;
                
                // –í—Å–µ–≥–¥–∞ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º URL –∏–∑ imageId –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏
                // (–º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω –ø—Ä–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è—Ö)
                this.objectData.src = imageUrl;
                
                if (!this.objectData.properties) {
                    this.objectData.properties = {};
                }
                this.objectData.properties.src = imageUrl;
                
                console.log('üîß DEBUG DeleteObjectCommand: –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', {
                    id: this.objectData.id,
                    imageId: this.objectData.imageId,
                    src: this.objectData.src,
                    propertiesSrc: this.objectData.properties?.src
                });
            } else {
                console.warn('üîß DEBUG DeleteObjectCommand: —É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ—Ç imageId, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å');
            }
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å —Ç–∏–ø–æ–º –æ–±—ä–µ–∫—Ç–∞
        this.description = `–£–¥–∞–ª–∏—Ç—å ${this.objectData.type}`;
    }

    execute() {
        // –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ PIXI
        this.coreMoodboard.state.removeObject(this.objectId);
        this.coreMoodboard.pixi.removeObject(this.objectId);
        

        
        this.coreMoodboard.eventBus.emit(Events.Object.Deleted, { 
            objectId: this.objectId 
        });
    }

    undo() {
        // DEBUG: –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–∏ Undo
        if (this.objectData.type === 'image') {
            console.log('üîÑ DEBUG Undo –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', {
                id: this.objectData.id,
                imageId: this.objectData.imageId,
                src: this.objectData.src,
                propertiesSrc: this.objectData.properties?.src,
                hasBase64Src: !!(this.objectData.src && this.objectData.src.startsWith('data:')),
                hasBase64Props: !!(this.objectData.properties?.src && this.objectData.properties.src.startsWith('data:'))
            });
        }

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—ä–µ–∫—Ç —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        this.coreMoodboard.state.addObject(this.objectData);
        this.coreMoodboard.pixi.createObject(this.objectData);
        
        this.coreMoodboard.eventBus.emit(Events.Object.Created, { 
            objectId: this.objectId, 
            objectData: this.objectData 
        });
    }
}
